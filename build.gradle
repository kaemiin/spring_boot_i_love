buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath("info.robotbrain.gradle.lombok:lombok-gradle:1.1")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'info.robotbrain.lombok'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "http://repo.spring.io/libs-snapshot" }
}

dependencies {
    
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-mail")        
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.4'
    
    compile("org.springframework.boot:spring-boot-devtools")    
    
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    
}

bootRun {
    addResources = true
}

jar {
    baseName = 'myapp'
    version =  '1.0'
    excludes = ['**/logback.xml']
}

task initSourceFolders {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

